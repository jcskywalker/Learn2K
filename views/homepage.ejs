<!DOCTYPE html>
<html lang="en">

<head>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="">

  <title>Learn 2K</title>
  <link href="/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" type ="text/css" href="/css/styles.css">
</head>

<body class="showcase">

  <!-- Page Content -->
  
  <div class="container">
    <div class="row main-heading">
      <div class="col-lg-12 text-center">
        <h1 class="main-heading-text" id='LearnFont'>Learn2K</h1>
        <h1 class="lead mb-3" style="color:honeydew; font-size: 300%">Welcome <%= name %></h1>
        <a href="/users/logout" class="btn btn-secondary";>Logout</a>
      </div>
    </div>
      <br>
      <div class="row">
        <div class="col-lg-12 text-center">
            <div class="search-container">
                <!-- Actual search box -->
                  <div class="form-group has-search">
                    <span class="fa fa-search form-control-feedback"></span>
                    <input type="search" id="search-text" class="form-control mdbAutocomplete" placeholder="Search">
                  </div>
            </div>
        </div>
      </div>
      
      <div class="row">
          <div class="col-lg-12 text-center">
              <h1 class="tutorial-title" style="color:honeydew; font-size: 500%">Tutorials</h1>
          </div>
      </div>
      
      <div class="row mt-1">
          <div class="col-6">
            <a href ="basicdefence.html">
            <div class="card">
              <div class="card-body text-center">
                <h5 class="card-title">Basic Defence</h5>
              </div>
            </div>
          </div>
          <div class="col-6">
              <a href="basicoffense.html">
                <div class="card">
                  <div class="card-body text-center">
                    <h5 class="card-title">Basic Offence</h5>
                  </div>
                </div>
              </a>
          </div>
        </div>
      
      <div class="row mt-1">
          <div class="col-6">
            <a href = "adv.defence.html">
            <div class="card">
              <div class="card-body text-center">
                <h5 class="card-title">Adv. Defence</h5>
              </div>
            </div>
          </div>
          <div class="col-6">
            <a href ="adv.offence.html">
            <div class="card">
              <div class="card-body text-center">
                <h5 class="card-title">Adv. Offence</h5>
              </div>
            </div>
          </div>
        </div>
        <br>
        <br><br>
    <footer id="sticky-footer" class="py-4 footer">
            <div class="container text-center">
              <div class="row">
                  <div class="col-3">
                    <a href="homepage" class="active-item"><i class="fa fa-user"></i></a>
                    <span class="active-item-text">Home</span>
                  </div>
                  <div class="col-3">
                      <a href="#" class="item"><i class="fa fa-globe"></i></a>
                      <span class="item-text">Learn</span>
                  </div>
                  <div class="col-3">
                      <a href="faqPage.html" class="item"><i class="fa fa-question-circle"></i></a>
                      <span class="item-text">FAQ</span>
                  </div>
                  <div class="col-3">
                      <a href="placeholder.html" class="item"><i class="fa fa-users"></i></a>
                      <span class="item-text">Community</span>
                  </div>
              </div>
            </div>
      </footer>
  </div>

  <!-- Bootstrap core JavaScript -->
  <script src="/jquery/jquery.js"></script>
  <script src="/jquery/jquery.slim.min.js"></script>
  <script src="/js/bootstrap.bundle.min.js"></script>

  <script type ="text/JavaScript">
  function LoadCompletedButton(itemVal) {
    var storedItems = localStorage.getItem("CompletedSet");
    if (storedItems != null) {
      var json_arr = $.parseJSON(storedItems);
      for (var i = 0; i < json_arr.length; i++) {
        if (itemVal == json_arr[i].name && json_arr[i].status == "Completed") {
          $(".completeBtn").html(
            '<button type="button" class="btn btn-success btn-completed">Completed</button>'
          );
        }
      }
    }
  }
  
  function autocomplete(inp, arr) {
    /*the autocomplete function takes two arguments,
      the text field element and an array of possible autocompleted values:*/
    var currentFocus;
    /*execute a function when someone writes in the text field:*/
    inp.addEventListener("input", function(e) {
      var a,
        b,
        i,
        val = this.value;
      /*close any already open lists of autocompleted values*/
      closeAllLists();
      if (!val) {
        return false;
      }
      currentFocus = -1;
      /*create a DIV element that will contain the items (values):*/
      a = document.createElement("DIV");
      a.setAttribute("id", this.id + "autocomplete-list");
      a.setAttribute("class", "autocomplete-items");
      /*append the DIV element as a child of the autocomplete container:*/
      this.parentNode.appendChild(a);
      /*for each item in the array...*/
      for (i = 0; i < arr.length; i++) {
        /*check if the item starts with the same letters as the text field value:*/
        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
          /*create a DIV element for each matching element:*/
          b = document.createElement("DIV");
          /*make the matching letters bold:*/
          b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
          b.innerHTML += arr[i].substr(val.length);
          /*insert a input field that will hold the current array item's value:*/
          b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
          /*execute a function when someone clicks on the item value (DIV element):*/
          b.addEventListener("click", function(e) {
            /*insert the value for the autocomplete text field:*/
            inp.value = this.getElementsByTagName("input")[0].value;
            /*close the list of autocompleted values,
                  (or any other open lists of autocompleted values:*/
            closeAllLists();
          });
          a.appendChild(b);
        }
      }
    });
    /*execute a function presses a key on the keyboard:*/
    inp.addEventListener("keydown", function(e) {
      var x = document.getElementById(this.id + "autocomplete-list");
      if (x) x = x.getElementsByTagName("div");
      if (e.keyCode == 40) {
        /*If the arrow DOWN key is pressed,
            increase the currentFocus variable:*/
        currentFocus++;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 38) {
        //up
        /*If the arrow UP key is pressed,
            decrease the currentFocus variable:*/
        currentFocus--;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 13) {
        /*If the ENTER key is pressed, prevent the form from being submitted,*/
        e.preventDefault();
        if (currentFocus > -1) {
          /*and simulate a click on the "active" item:*/
          if (x) x[currentFocus].click();
        }
      }
    });
    function addActive(x) {
      /*a function to classify an item as "active":*/
      if (!x) return false;
      /*start by removing the "active" class on all items:*/
      removeActive(x);
      if (currentFocus >= x.length) currentFocus = 0;
      if (currentFocus < 0) currentFocus = x.length - 1;
      /*add class "autocomplete-active":*/
      x[currentFocus].classList.add("autocomplete-active");
    }
    function removeActive(x) {
      /*a function to remove the "active" class from all autocomplete items:*/
      for (var i = 0; i < x.length; i++) {
        x[i].classList.remove("autocomplete-active");
      }
    }
    function closeAllLists(elmnt) {
      /*close all autocomplete lists in the document,
        except the one passed as an argument:*/
      var x = document.getElementsByClassName("autocomplete-items");
      for (var i = 0; i < x.length; i++) {
        if (elmnt != x[i] && elmnt != inp) {
          x[i].parentNode.removeChild(x[i]);
        }
      }
    }
    /*execute a function when someone clicks in the document:*/
    document.addEventListener("click", function(e) {
      closeAllLists(e.target);
    });
  }
  
  
  var suggetions = [
      "Move Player", "Hands Up / Contest", "Intense D", "Sprint", "Defensive Strategies", "Icon Swap", "Player Swap", "Take Charge", "Steal", "Block / Rebound", "Gameplay HUD", "Points of Emphasis", "Defensive Sets", "Substitutions", "Intentional Foul", "Crowd Dribbler", "Fast Shuffle", "Swat Block", "Flop","Double Team", "Icon Double Team", "Bump", "Chuck", "Grab (while defender is running)", "Post Up / Ball Denial", "Deny Hands Out", "Ball Pressure", "Push", "Deny / Front Post", "Pull Chair in Post", "Quick Playcall",
  "Positional Playcall",
  "Basic Pick Control",
  "Advanced Pick Control",
  "Icon Pick Control",
  "Slip Screen and Early Fade",
  "Call for Ball",
  "Call for Alley-Oop",
  "Set Screen",
  "Spin",
  "Walkdown",
  "Post Fade",
  "Post Hook",
  "Post Layup",
  "Post Hop",
  "Post Stepback",
  "Dropstep",
  "Up and Under",
  "Shimmy Shot",
  "Shimmy Hook",
  "Move Player",
  "Post Up",
  "Sprint",
  "Pass",
  "Bounce Pass",
  "Shoot",
  "Overhead Skip Pass",
  "Timeout",
  "Pause",
  "Normal Layup",
  "2-Hand Dunk",
  "Flashy Dunk",
  "Pump Fake"
    ];
  
        autocomplete(document.getElementById("search-text"), suggetions);
</script>

</body>

</html>
